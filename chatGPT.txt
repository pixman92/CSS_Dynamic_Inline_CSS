javascript - use lots of comments

make a function that takes in CSS text and an HTML element's ID.
based on the media breakpoints 'sm/md/lg/xl', take the CSS text ('sm/md/lg/xl',) that follows the current media breakpoint. and add it to a string (saved String), when you have iterated through all CSS text, add 'saved string' to the HTML element's attribute's style string

example:
sm:color[red] - this makes the HTML element's color to red, when the screen width is small
my element:
style="color:red"

example:
sm:font-size[20px] sm:color[blue] md:margin-top[80px] md:font-size[25px]

example: (for sm screensize)
style="font-size:20px; color:blue;"

example: (for md screensize)
style="margin-top:80px; font-size:25px;"

also, an example for when there is only a media breakpoint, a ':' and [ and ] - where the text inside the [ and ] is a predefined class
example:
sm:[center] - center is a predefined class


take all the CSS text, that match the current media breakpoint, and reapply them everytime the window width resizes

====================
refactor - make it work with these 2 objectives in mind, 
example: 
sm:color[red] - this adds color:red; to the style attribute
exmaple:
sm:[centered] - this takes a predefinedClass and applies it to the class attribute of the targeted HTML element

====================
refactor - reapply both sm:color[red] and sm:[centered] on every resize of the width of the screensize

refactor - everytime the screen width changes, reapply the CSS changes
make sure sm:color[red] 

====================

javascript - use lots of comments.

a function that takes in: CSS text, HTML element by ID, inner HTML and an ID string to be the new ID of the new (not parent) HTLM element

the inner HTML is the new HTML element, attached to the HTML (by element ID), apply the CSS text to the new HTML element

the CSS text starts with 'sm/md/lg/xl', then a ':' then text, then [ and ]
example:
myFunction( cssText, HTMLElementById, innerHTML)

this function applies CSS text, as "style = CSS attribute:CSS value;" reapply the media breakpoint cssText everytime the window resizes. do not add cssText styling to the parentElement/HTML element given but to the child element

add css Styling to newly created HTML element (to the child, not the parent element)
attach the new HTML element to an already established HTML ID'd element. Add the ID string to the new element, so other elements can attach to it

====
the cssText example is:
sm:margin-top[40px]

HTML element by ID example:
document.getElementById(element)

innerHTML example:
"<div>helloWorld</div>"

(this is how the cssText is applied to the NEW HTML element and only the new HTML element created)
exmaple (start with):
 "<div>helloWorld</div>"
make it into:
"<div style='margin-top:40px;'>helloWorld</div>"
====

refactor - use lots of comments.

when media breakpoint is followed by [ and ]
make the text inside [ and ] as className to add to Class List
then when window width resizes, strip the className and reapply the applicible ClassNames